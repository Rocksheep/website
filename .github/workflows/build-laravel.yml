name: "Build and test Laravel"

on:
  pull_request:

jobs:
  laravel-frontend:
    name: "Front-end build and test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-node
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-build-${{ env.cache-name }}-
            node-build-

      - name: Copy environment config
        run: cp .github/actions.env .env

      - name: Install Yarn dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build Front-end
        run: yarn build

      - name: Publish front-end
        uses: actions/upload-artifact@master
        with:
          name: front-end
          path: public/
  laravel-backend:
    name: "Back-end build and test"
    needs: [laravel-frontend]
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        php:
          - '7.4'
    services:
      database:
        image: mysql:5
        ports:
          - 13306:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php }}
          extensions: exif, json, mbstring, bcmath, dom, fileinfo, mysql, gd
          coverage: xdebug

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Check for Gumbo Millennium typos
        run: .github/find-typos.sh

      - name: Cache Composer
        uses: actions/cache@v1
        with:
          path: vendor
          key: composer-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-build-${{ env.cache-name }}-
            composer-build-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-build-${{ env.cache-name }}-
            node-build-

      - name: Login for Laravel Nova
        run: composer config http-basic.nova.laravel.com ${NOVA_USERNAME} ${NOVA_PASSWORD}
        env:
          NOVA_USERNAME: ${{ secrets.NOVA_USERNAME }}
          NOVA_PASSWORD: ${{ secrets.NOVA_PASSWORD }}

      - name: Copy environment config
        run: cp .github/actions.env .env

      - name: Install composer dependencies
        run: |
          composer install --no-suggest --no-progress --no-interaction
          php artisan key:generate

      - name: Prepare database
        run: php artisan migrate --seed

      - name: Download front-end
        uses: actions/download-artifact@master
        with:
          name: front-end
          path: public/

      - name: Install Font Awesome icons
        run: yarn run postinstall

      - name: Run linters
        run: composer run lint

      - name: Test optimizing the config
        run: |
          php artisan optimize
          php artisan optimize:clear

      - name: Run unit tests
        run: |
          test -d dist || mkdir dist
          vendor/bin/phpunit --coverage-clover ./dist/coverage-clover.xml

      - name: Report test results to CodeClimate
        run: |
          curl -o ./cc-test-reporter -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t clover ./dist/coverage-clover.xml
          ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_ID }}
        continue-on-error: true
